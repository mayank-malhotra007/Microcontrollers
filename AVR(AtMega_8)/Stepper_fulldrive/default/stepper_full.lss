
stepper_full.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000144  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000164  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000031e  00000000  00000000  0000017f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f5  00000000  00000000  0000049d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000027b  00000000  00000000  00000592  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000810  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000dd  00000000  00000000  00000830  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001e0  00000000  00000000  0000090d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000aed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	5b c0       	rjmp	.+182    	; 0xec <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include<util/delay.h>

void main()
{
 int i;
 DDRC=0xff;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	84 bb       	out	0x14, r24	; 20
  3c:	20 e0       	ldi	r18, 0x00	; 0
  3e:	30 e0       	ldi	r19, 0x00	; 0
 while(1)
   {
      for(i=0;i<13;i++)
	     {
		    PORTC=0x03;
  40:	b3 e0       	ldi	r27, 0x03	; 3
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  42:	49 e1       	ldi	r20, 0x19	; 25
  44:	50 e0       	ldi	r21, 0x00	; 0
			_delay_ms(500);

			PORTC=0x06;
  46:	a6 e0       	ldi	r26, 0x06	; 6
			_delay_ms(500);

			PORTC=0x0c;
  48:	7c e0       	ldi	r23, 0x0C	; 12
			_delay_ms(500);

			PORTC=0x09;
  4a:	69 e0       	ldi	r22, 0x09	; 9
  4c:	22 c0       	rjmp	.+68     	; 0x92 <__SREG__+0x53>
 DDRC=0xff;
 while(1)
   {
      for(i=0;i<13;i++)
	     {
		    PORTC=0x03;
  4e:	b5 bb       	out	0x15, r27	; 21
  50:	88 e8       	ldi	r24, 0x88	; 136
  52:	93 e1       	ldi	r25, 0x13	; 19
  54:	fa 01       	movw	r30, r20
  56:	31 97       	sbiw	r30, 0x01	; 1
  58:	f1 f7       	brne	.-4      	; 0x56 <__SREG__+0x17>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  5a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  5c:	d9 f7       	brne	.-10     	; 0x54 <__SREG__+0x15>
			_delay_ms(500);

			PORTC=0x06;
  5e:	a5 bb       	out	0x15, r26	; 21
  60:	88 e8       	ldi	r24, 0x88	; 136
  62:	93 e1       	ldi	r25, 0x13	; 19
  64:	fa 01       	movw	r30, r20
  66:	31 97       	sbiw	r30, 0x01	; 1
  68:	f1 f7       	brne	.-4      	; 0x66 <__SREG__+0x27>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  6a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  6c:	d9 f7       	brne	.-10     	; 0x64 <__SREG__+0x25>
			_delay_ms(500);

			PORTC=0x0c;
  6e:	75 bb       	out	0x15, r23	; 21
  70:	88 e8       	ldi	r24, 0x88	; 136
  72:	93 e1       	ldi	r25, 0x13	; 19
  74:	fa 01       	movw	r30, r20
  76:	31 97       	sbiw	r30, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <__SREG__+0x37>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  7a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  7c:	d9 f7       	brne	.-10     	; 0x74 <__SREG__+0x35>
			_delay_ms(500);

			PORTC=0x09;
  7e:	65 bb       	out	0x15, r22	; 21
  80:	88 e8       	ldi	r24, 0x88	; 136
  82:	93 e1       	ldi	r25, 0x13	; 19
  84:	fa 01       	movw	r30, r20
  86:	31 97       	sbiw	r30, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <__SREG__+0x47>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  8a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  8c:	d9 f7       	brne	.-10     	; 0x84 <__SREG__+0x45>
{
 int i;
 DDRC=0xff;
 while(1)
   {
      for(i=0;i<13;i++)
  8e:	2f 5f       	subi	r18, 0xFF	; 255
  90:	3f 4f       	sbci	r19, 0xFF	; 255
  92:	2d 30       	cpi	r18, 0x0D	; 13
  94:	31 05       	cpc	r19, r1
  96:	dc f2       	brlt	.-74     	; 0x4e <__SREG__+0xf>
  98:	20 e0       	ldi	r18, 0x00	; 0
  9a:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(500);
		}

		for(i=0;i<13;i++)
	     {
		    PORTC=0x09;
  9c:	65 bb       	out	0x15, r22	; 21
  9e:	88 e8       	ldi	r24, 0x88	; 136
  a0:	93 e1       	ldi	r25, 0x13	; 19
  a2:	fa 01       	movw	r30, r20
  a4:	31 97       	sbiw	r30, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <__SREG__+0x65>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  a8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  aa:	d9 f7       	brne	.-10     	; 0xa2 <__SREG__+0x63>
			_delay_ms(500);

			PORTC=0x0c;
  ac:	75 bb       	out	0x15, r23	; 21
  ae:	88 e8       	ldi	r24, 0x88	; 136
  b0:	93 e1       	ldi	r25, 0x13	; 19
  b2:	fa 01       	movw	r30, r20
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <__SREG__+0x75>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ba:	d9 f7       	brne	.-10     	; 0xb2 <__SREG__+0x73>
			_delay_ms(500);

			PORTC=0x06;
  bc:	a5 bb       	out	0x15, r26	; 21
  be:	88 e8       	ldi	r24, 0x88	; 136
  c0:	93 e1       	ldi	r25, 0x13	; 19
  c2:	fa 01       	movw	r30, r20
  c4:	31 97       	sbiw	r30, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <__SREG__+0x85>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  c8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ca:	d9 f7       	brne	.-10     	; 0xc2 <__SREG__+0x83>
			_delay_ms(500);

			PORTC=0x03;
  cc:	b5 bb       	out	0x15, r27	; 21
  ce:	88 e8       	ldi	r24, 0x88	; 136
  d0:	93 e1       	ldi	r25, 0x13	; 19
  d2:	fa 01       	movw	r30, r20
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <__SREG__+0x95>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  da:	d9 f7       	brne	.-10     	; 0xd2 <__SREG__+0x93>

			PORTC=0x09;
			_delay_ms(500);
		}

		for(i=0;i<13;i++)
  dc:	2f 5f       	subi	r18, 0xFF	; 255
  de:	3f 4f       	sbci	r19, 0xFF	; 255
  e0:	2d 30       	cpi	r18, 0x0D	; 13
  e2:	31 05       	cpc	r19, r1
  e4:	d9 f6       	brne	.-74     	; 0x9c <__SREG__+0x5d>
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	d3 cf       	rjmp	.-90     	; 0x92 <__SREG__+0x53>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>
